<?xml version="1.0" encoding="UTF-8"?>
<ae:configurations xmlns:view="http://icinga.org/icinga/config/global/api/views/1.0"
    xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0"
>
    <ae:configuration>
        <dql name="TARGET_HOST" >
            <query>
            <![CDATA[
            SELECT DISTINCT 
                h.icon_image AS HOST_ICON_IMAGE,
                i.instance_name AS INSTANCE_NAME,
                h.host_object_id AS HOST_OBJECT_ID,
                oh.name1 AS HOST_NAME,
                h.alias AS HOST_ALIAS,
                h.display_name AS HOST_DISPLAY_NAME,
                hs.current_state AS HOST_CURRENT_STATE,
                (CASE WHEN hs.last_state_change<='1970-01-01 00:00:00' THEN ps.program_start_time ELSE hs.last_state_change END) as DURATION_START,
                hs.last_check AS HOST_LAST_CHECK,
                hs.next_check AS HOST_NEXT_CHECK,
                ps.program_start_time AS HOST_PROGRAM_START_TIME,
                hs.output AS HOST_OUTPUT,
                hs.current_check_attempt AS HOST_CURRENT_CHECK_ATTEMPT,
                hs.max_check_attempts AS HOST_MAX_CHECK_ATTEMPT,
                hs.process_performance_data AS HOST_PROCESS_PERFORMANCE_DATA,
                hs.max_check_attempts AS max_attempt,
                hs.perfdata AS HOST_PERFORMANCE_DATA,
                i.instance_id AS HOST_INSTANCE_ID,
                h.host_id AS HOST_ID,
                h.action_url AS HOST_ACTION_URL,
                h.notes as HOST_NOTES,
                h.notes_url AS HOST_NOTES_URL,
                (hs.has_been_checked-1)*-1 as HOST_IS_PENDING,
                hs.notifications_enabled as notifications_enabled,
                hs.problem_has_been_acknowledged as problem_acknowledged,
                hs.scheduled_downtime_depth as scheduled_downtime_depth,
                hs.has_been_checked as host_has_been_checked
            FROM IcingaHosts h
            LEFT JOIN h.instance i
            LEFT JOIN h.status hs
            LEFT JOIN h.object oh
            LEFT JOIN i.programstatus as ps
            
            WHERE h.config_type = '${retained_flag}'
            ]]>
            </query>
            
            <credential name="UserObjectId" type="UserObjectId">
                <parameter name="target_fields">h.host_object_id</parameter>
                <parameter name="aggregation">or</parameter>
            </credential>

            <!--
                Additional fields that are used in cronk filtering
            -->
            <filter name="customvariable_name" type="dql">
                <join>h.customvariables cvh</join>
                <select>cvh.varname AS customvariable_name</select>
            </filter>

            <filter name="customvariable_value" type="dql">
                <join>h.customvariables cvh</join>
                <select>cvh.varvalue AS customvariable_value</select>
            </filter>
            <filter name="host_customvariable_name" type="dql">
                <join>h.customvariables cvh</join>
                <select>cvh.varname AS host_customvariable_name</select>
            </filter>

            <filter name="host_customvariable_value" type="dql">
                <join>h.customvariables cvh</join>
                <select>cvh.varvalue AS host_customvariable_value</select>
            </filter>
            
            <filter name="hostgroup_name" type="dql">
                <join>h.hostgroups hg</join>
                <join>hg.object ohg</join>
                <select>ohg.name1 AS hostgroup_name</select>
                <groupby>h.host_object_id</groupby>
            </filter>
            
            <filter name="hostgroup_object_id" type="dql">
                <join>h.hostgroups hg</join>
                <join>hg.object ohg</join>
                <select>ohg.object_id AS hostgroup_object_id</select>
                <groupby>h.host_object_id</groupby>                
            </filter>
            
            <filter name="servicegroup_name" type="dql">
                <join>h.services s</join>
                <join>s.servicegroups sg</join>
                <join>sg.object osg</join>
                <select>osg.name1 AS servicegroup_name</select>
                <groupby>h.host_object_id</groupby>
            </filter>
            
            <filter name="servicegroup_object_id" type="dql">
                <join>h.services s</join>
                <join>s.servicegroups sg</join>
                <join>sg.object osg</join>
                <select>osg.object_id AS servicegroup_object_id</select>
                <groupby>h.host_object_id</groupby>
            </filter>


            <filter name="host_is_pending" type="dql">
                <resolve>((hs.has_been_checked-1)*-1)</resolve>
                <select>((hs.has_been_checked-1)*-1) AS host_is_pending</select>
            </filter>
         </dql>

         <dql base="TARGET_HOST" name="TARGET_HOST_OPEN_PROBLEMS" >
            <query>
            <![CDATA[
            SELECT DISTINCT
                   h.icon_image AS SERVICE_ICON_IMAGE,
                i.instance_name AS INSTANCE_NAME,
                h.host_object_id AS HOST_OBJECT_ID,
                oh.name1 AS HOST_NAME,
                h.alias AS HOST_ALIAS,
                h.display_name AS HOST_DISPLAY_NAME,
                hs.current_state AS HOST_CURRENT_STATE,
                hs.process_performance_data AS HOST_PROCESS_PERFORMANCE_DATA,
                (CASE WHEN hs.last_state_change<='1970-01-01 00:00:00' THEN ps.program_start_time ELSE hs.last_state_change END) as DURATION_START,
                hs.last_check AS HOST_LAST_CHECK,
                hs.next_check AS HOST_NEXT_CHECK,
                ps.program_start_time AS HOST_PROGRAM_START_TIME,
                hs.perfdata AS HOST_PERFORMANCE_DATA,
                hs.output AS HOST_OUTPUT,
                hs.current_check_attempt AS HOST_CURRENT_CHECK_ATTEMPT,
                hs.max_check_attempts AS HOST_MAX_CHECK_ATTEMPT,
                i.instance_id AS HOST_INSTANCE_ID,
                h.host_id AS HOST_ID,
                h.action_url AS HOST_ACTION_URL,
                h.notes_url AS HOST_NOTES_URL,
                hs.notifications_enabled as notifications_enabled,
                hs.problem_has_been_acknowledged as problem_acknowledged,
                hs.scheduled_downtime_depth as scheduled_downtime_depth,
                hs.has_been_checked as host_has_been_checked
            FROM IcingaHosts h
            INNER JOIN h.instance i
            INNER JOIN h.status hs WITH
            (
                hs.current_state != 0 AND
                hs.problem_has_been_acknowledged = 0 AND
                hs.scheduled_downtime_depth = 0
            )
            INNER JOIN h.object oh
            INNER JOIN i.programstatus as ps
            WHERE h.config_type = '${retained_flag}'
            ]]>
            </query>

         </dql>


         <dql name="TARGET_OPEN_PROBLEMS" >
            <query>
            <![CDATA[
            SELECT
                o.object_id AS PROBLEMS_OBJECT_ID,
                o.objecttype_id AS OBJECTTYPE_ID,
                COALESCE(s.host_object_id, h.host_object_id) AS HOST_OBJECT_ID,
                s.service_object_id AS SERVICE_OBJECT_ID,
                i.instance_id AS INSTANCE_ID,
                i.instance_name AS INSTANCE_NAME,
                o.name1 AS HOST_NAME,
                o.name2 AS SERVICE_NAME,
                COALESCE(s.icon_image, h.icon_image) AS ICON_IMAGE,
                COALESCE(hs.current_state,shs.current_state) AS HOST_CURRENT_STATE,
                COALESCE(ss.last_state_change,hs.last_state_change) AS LAST_STATE_CHANGE,
                COALESCE(ss.output, hs.output) AS OUTPUT,
                hs.process_performance_data AS HOST_PROCESS_PERFORMANCE_DATA,
                hs.perfdata AS HOST_PERFORMANCE_DATA,                
                ss.current_state AS SERVICE_CURRENT_STATE,
                hs.next_check AS HOST_NEXT_CHECK,
                ss.next_check AS SERVICE_NEXT_CHECK
                hs.last_check AS HOST_LAST_CHECK,
                ss.last_check AS SERVICE_LAST_CHECK
                h.action_url AS HOST_ACTION_URL,
                h.notes_url AS HOST_NOTES_URL,
                s.action_url AS SERVICE_ACTION_URL,
                s.notes_url AS SERVICE_NOTES_URL
            FROM IcingaObjects o
            INNER JOIN o.instance i
            LEFT JOIN o.host h
            LEFT JOIN o.service s
            LEFT JOIN h.status hs
            LEFT JOIN s.status ss
            LEFT JOIN s.host sh
            LEFT JOIN sh.status shs
            WHERE o.is_active = 1 AND o.objecttype_id < 3
          
            
            AND ((
                h.config_type = '${retained_flag}' AND
                o.objecttype_id = 1 AND
                hs.current_state != 0 AND
                hs.problem_has_been_acknowledged = 0 AND
                hs.scheduled_downtime_depth = 0
            ) OR (
                s.config_type = '${retained_flag}' AND 
                o.objecttype_id = 2 AND
                ss.current_state != 0 AND
                ss.problem_has_been_acknowledged = 0 AND
                ss.scheduled_downtime_depth = 0
            ))
            
            ORDER BY LAST_STATE_CHANGE DESC
            ]]>
            </query>
            
            <credential name="UserObjectId" type="UserObjectId">
                <parameter name="target_fields">h.host_object_id, s.service_object_id, s.host_object_id</parameter>
                <parameter name="aggregation">or</parameter>
            </credential>

         </dql>
     </ae:configuration>
</ae:configurations>


