<?php
// Connection Component Binding
/**
 * BaseIcingaConninfo
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property slahistory_id        | bigint(20) unsigned | NO   | PRI | NULL                | auto_increment |
 * @property instance_id          | bigint(20) unsigned | YES  | MUL | 0                   |                |
 * @property start_time           | datetime            | YES  |     | 0000-00-00 00:00:00 |                |
 * @property end_time             | datetime            | YES  |     | 0000-00-00 00:00:00 |                |
 * @property acknowledgement_time | datetime            | YES  |     | NULL                |                |
 * @property object_id            | bigint(20) unsigned | YES  |     | 0                   |                |
 * @property state                | smallint(6)         | YES  |     | 0                   |                |
 * @property state_type           | smallint(6)         | YES  |     | 0                   |                |
 * @property scheduled_downtime   | tinyint(1)          | YES  |     | 0                   |                |
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIcingaSlahistory extends Doctrine_Record {
    public function setTableDefinition() {
        $prefix = Doctrine_Manager::getInstance()->getConnection(IcingaDoctrineDatabase::CONNECTION_ICINGA)->getPrefix();
        $this->setTableName($prefix.'slahistory');
        $this->hasColumn('slahistory_id', 'integer', 4, array(
                             'type' => 'integer',
                             'length' => 4,
                             'fixed' => false,
                             'unsigned' => false,
                             'primary' => true,
                             'autoincrement' => true,
                         ));
        $this->hasColumn('instance_id', 'integer', 2, array(
                             'type' => 'integer',
                             'length' => 2,
                             'fixed' => false,
                             'unsigned' => false,
                             'primary' => false,
                             'default' => '0',
                             'notnull' => true,
                             'autoincrement' => false,
                         ));
        $this->hasColumn('object_id', 'integer', 4, array(
                             'type' => 'integer',
                             'length' => 4,
                             'fixed' => false,
                             'unsigned' => false,
                             'primary' => true,
                             'autoincrement' => true,
                         ));
        $this->hasColumn('start_time', 'timestamp', null, array(
                             'type' => 'timestamp',
                             'fixed' => false,
                             'unsigned' => false,
                             'primary' => false,
                             'default' => '0000-00-00 00:00:00',
                             'notnull' => true,
                             'autoincrement' => false,
                         ));
       $this->hasColumn('end_time', 'timestamp', null, array(
                             'type' => 'timestamp',
                             'fixed' => false,
                             'unsigned' => false,
                             'primary' => false,
                             'default' => '0000-00-00 00:00:00',
                             'notnull' => true,
                             'autoincrement' => false,
                         ));
        $this->hasColumn('acknowledgement_time', 'timestamp', null, array(
                             'type' => 'timestamp',
                             'fixed' => false,
                             'unsigned' => false,
                             'primary' => false,
                             'default' => '0000-00-00 00:00:00',
                             'notnull' => true,
                             'autoincrement' => false,
                         ));
       
       $this->hasColumn('state', 'integer', 4, array(
                             'type' => 'integer',
                             'length' => 4,
                             'fixed' => false,
                             'unsigned' => false,
                             'primary' => false,
                             'default' => '0',
                             'notnull' => true,
                             'autoincrement' => false,
                         ));
        $this->hasColumn('state_type', 'integer', 4, array(
                             'type' => 'integer',
                             'length' => 4,
                             'fixed' => false,
                             'unsigned' => false,
                             'primary' => false,
                             'default' => '0',
                             'notnull' => true,
                             'autoincrement' => false,
                         ));
        $this->hasColumn('scheduled_downtime', 'integer', 4, array(
                             'type' => 'integer',
                             'length' => 4,
                             'fixed' => false,
                             'unsigned' => false,
                             'primary' => false,
                             'default' => '0',
                             'notnull' => true,
                             'autoincrement' => false,
                         ));
    }

    public function setUp() {
        $this->hasOne('IcingaInstances as instance', array(
                          'local' => 'instance_id',
                          'foreign' => 'instance_id'
                      ));
        $this->hasOne('IcingaObjects as object', array(
                          'local' => 'onject_id',
                          'foreign' => 'object_id'
                      ));
        $this->hasOne('IcingaServices as service', array(
                          'local' => 'onject_id',
                          'foreign' => 'service_object_id'
                      ));
        $this->hasOne('IcingaHosts as service', array(
                          'local' => 'onject_id',
                          'foreign' => 'host_object_id'
                      ));
        parent::setUp();

    }
}
