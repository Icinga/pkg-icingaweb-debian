#!/bin/bash

set -e

###
# Install DB
###
. /usr/share/debconf/confmodule
. /usr/share/dbconfig-common/dpkg/postinst.mysql
dbc_go icinga-web $@

###
# Database connection files
###
uriescape() {
    echo "$(perl -MURI::Escape -e 'print uri_escape($ARGV[0]);' "$1")"
}

generate_dbxml() {
    local file="$1"
    local template="$2"
    local dbconfig="$3"

    # load dbconfig file
    if [ -f "$dbconfig" ]; then
        source $dbconfig
    else
        echo "database config failed: file $dbconfig does not exist" >&2
        return 1
    fi

    # leave when dbconfig not enabled
    if [ "$dbc_install" != "true" ]; then
        echo "database config failed: dbconfig-common for \"$(basename $dbconfig .conf)\" not enabled!" 
        return 1
    fi

    # create tempfile
    local tempfile=$(tempfile -m 600 -p "$(basename $file)")

    # add a colon to port
    [ "$dbc_dbport" != "" ] && dbc_dbport=":$dbc_dbport"
    dbc_edbuser=$(uriescape $dbc_dbuser)
    dbc_edbpass=$(uriescape $dbc_dbpass)
    dbc_edbname=$(uriescape $dbc_dbname)

    # uri escape the vars
    # build the dsn
    local dsn="$dbc_dbtype://$dbc_edbuser:$dbc_edbpass@${dbc_server:=localhost}$dbc_dbport/$dbc_edbname"

    # write xml to temp
    cat $template | sed "s|_DBDSN_|$dsn|" > $tempfile

    # replace the file with ucf
    ucf --debconf-ok $tempfile $file
    
    echo "database config successful: $file"
    rm -f $tempfile 
}

generate_dbxml /etc/icinga-web/conf.d/database-web.xml \
               /usr/share/icinga-web/tmpl/database-web.xml.tmpl \
               /etc/dbconfig-common/icinga-web.conf

generate_dbxml /etc/icinga-web/conf.d/database-ido.xml \
               /usr/share/icinga-web/tmpl/database-ido.xml.tmpl \
               /etc/dbconfig-common/icinga-idoutils.conf

###
# webservers (currently only Apache2)
###

# get the list of selected servers
db_get icinga-web/httpd
servers=$(echo $RET | sed -e 's/,/ /g')

# check for activated servers
for server in $servers; do
    if [ "$server" = "apache2" ]; then
        echo "enabling config for webserver $server..."

        # enable mod rewrite
        [ -f /etc/apache2/mods-enabled/rewrite.load ] || a2enmod rewrite
        
        # create symlink if not existing
        [ -f /etc/apache2/conf.d/icinga-web.conf ] || ln -vs ../../icinga-web/apache2.conf /etc/apache2/conf.d/icinga-web.conf
        
        # reload webserver
        [ -x $(which invoke-rc.d) ] && invoke-rc.d apache2 reload
    else
        echo "warning: webserver $server is not supported!"
    fi
done

# check for not wanted servers
if ! echo $servers | grep -q "apache2"; then
    # remove link if exists
    if [ -L /etc/apache2/conf.d/icinga-web.conf ]; then
        echo "removing config for webserver apache2"
        rm -f /etc/apache2/conf.d/icinga-web.conf
        
        # reload webserver
        [ -x $(which invoke-rc.d) ] && invoke-rc.d apache2 reload
    fi
fi

###
# Set root password in database
###
setpassword() {
    password="$1"
    
    # gen new salt
    salt=$(php5 -r 'echo hash("sha256", uniqid("root_", mt_rand()));')
    
    # gen new pw hash
    export SALT="$salt"
    export PW="$password"
    pwhash=$(php5 -r 'echo hash_hmac("sha256", getenv("PW"), getenv("SALT"));')

    # load database connection info
    source /etc/dbconfig-common/icinga-web.conf

    if [ "$dbc_dbtype" = "mysql" ]; then
        # query the database to update
        salt_e=${salt/\'/\\\'}
        pwhash_e=${pwhash/\'/\\\'}
        
        export MYSQL_PWD="$dbc_dbpass"
        echo "UPDATE nsm_user SET user_password='""$pwhash_e""', user_salt = '""$salt_e""' WHERE user_name = 'root';" \
           | mysql -h "${dbc_dbhost:=localhost}" -u "$dbc_dbuser" "$dbc_dbname"
        echo "root password updated in database!"
    else
        echo "db type '$dbc_dbtype' not implemented!" >&2
    fi
}

db_get icinga-web/rootpassword || true
password="$RET"
if [ "$password" != "" ]; then
    setpassword $password
else
    echo "no password configured - root password for Icinga Web will not be set!"
fi

###
# Clear cache
###
if [ -x /usr/lib/icinga-web/bin/clearcache.sh ]; then
	/usr/lib/icinga-web/bin/clearcache.sh
fi

###
# Permissions
###

setperm() {
    local user="$1"
    local group="$2"
    local mode="$3"
    local file="$4"
    shift 4
    # only do something when no setting exists
    if ! dpkg-statoverride --list "$file" >/dev/null 2>&1; then
      chown "$user":"$group" "$file"
      chmod "$mode" "$file"
    fi
}

setperm root www-data 0640 /etc/icinga-web/conf.d/access.xml
setperm root www-data 0640 /etc/icinga-web/conf.d/auth.xml
setperm root www-data 0640 /etc/icinga-web/conf.d/databases.xml
setperm root www-data 0640 /etc/icinga-web/conf.d/database-web.xml
setperm root www-data 0640 /etc/icinga-web/conf.d/database-ido.xml
setperm root www-data 0640 /etc/icinga-web/conf.d/module_reporting.xml

setperm www-data adm 0770 /var/log/icinga-web

setperm www-data www-data 0770 /var/lib/icinga-web/app/cache

#DEBHELPER#
